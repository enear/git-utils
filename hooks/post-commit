#!/bin/bash

DEBUG=1

RESET_ALL=$(tput sgr0)
BOLD=$(tput bold)
YELLOW="${BOLD}$(tput setaf 3)"

CHANGELOG_FILENAME="CHANGELOG.md"
README_FILENAME="README.md"

warning() {
	local mesg=$1
	shift
	printf "${YELLOW}[WARNING]${RESET_ALL} ${BOLD}${mesg}${RESET_ALL}\n" "$@" >&2
}

function find_pom_dirs() {
	local path="${1:-.}"
	while IFS= read -r -d '' file; do
		printf "%s\0" "$(dirname "$file")"
	done < <(git ls-files -z "${path}/*pom.xml")
}

function find_project_exclusions() {
	local path="${1:-.}"
	while IFS= read -r -d '' file; do
		if [[ "$dir" != "$file" ]]; then
			printf ":!%s\n" "$file"
		fi
	done < <(find_pom_dirs "${path}")
}

function check_changelog() {
	local dir="${1:-.}"
	local changelog_path="$dir/$CHANGELOG_FILENAME"

	if [[ ! -f "${changelog_path}" ]]; then
		warning "change log missing ${changelog_path}"
		return 1
	fi
	return 0
}

function check_readme() {
	local dir="${1:-.}"
	local readme_path="$dir/$README_FILENAME"

	if [[ ! -f "${readme_path}" ]]; then
		warning "readme missing ${readme_path}"
		return 1
	fi
	return 0
}

function changelog_committed() {
	local dir="${1:-.}"
	git diff-tree --no-commit-id --name-only -r HEAD \
		--exit-code -- "${dir}/${CHANGELOG_FILENAME}" &> /dev/null
	if [[ $? -eq 0 ]]; then
		return 1
	else
		return 0
	fi
}

function check_changelog_not_updated() {
	local dir="${1:-.}"
	changelog_committed "${dir}"
	if [[ $? -eq 1 ]]; then
		exclusions=($(find_project_exclusions "$dir"))
		git diff-tree --no-commit-id --name-only -r HEAD \
			--exit-code -- "${dir}" "${exclusions[@]}" &> /dev/null
		if [[ $? -eq 1 ]]; then
			warning "change log has not been updated ${dir}/${CHANGELOG_FILENAME}"
		fi
	fi
}

while IFS= read -r -d '' dir; do
	check_changelog "${dir}"
	check_readme "${dir}"
	check_changelog_not_updated "${dir}"
done < <(find_pom_dirs)

